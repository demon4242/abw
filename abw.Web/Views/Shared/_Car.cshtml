@model abw.ViewModels.CarViewModel

<hr />
@Html.HiddenFor(m => m.Id)

<div>
	@Html.LabelFor(m => m.Make)
	@Html.TextBoxFor(m => m.Make, new { autocomplete = "off" })
	@Html.ValidationMessageFor(m => m.Make)
</div>

<div>
	@Html.LabelFor(m => m.Model)
	@Html.TextBoxFor(m => m.Model, new { autocomplete = "off" })
	@Html.ValidationMessageFor(m => m.Model)
</div>

<div id="yearsSelector">
	<strong>Год с</strong>
	@Html.DropDownListFor(m => m.YearFrom, Model.Years, "Выберите год")
	<strong>по</strong>
	@Html.DropDownListFor(m => m.YearTo, Model.Years, "Выберите год")
	@Html.ValidationMessageFor(m => m.YearFrom)
	@Html.ValidationMessageFor(m => m.YearTo)
</div>

<div>
	@Html.LabelFor(m => m.Photos)

	@foreach (KeyValuePair<string, bool> currentPhoto in Model.CurrentPhotos)
	{
		<div class="car-photo-wrapper">
			<img src="@Url.Content(currentPhoto.Key)" class="car-photo" alt="@Model.Make @Model.Model @Model.YearFrom-@Model.YearTo photo" />
			<label class="checkbox-wrapper">
				@{
					string key = currentPhoto.Key;
				}
				@Html.CheckBoxFor(m => m.CurrentPhotos[key], new { data_val = false })
				Удалить фото
			</label>
		</div>
	}

	@Html.TextBoxFor(m => m.Photos, new { type = "file", data_bind = "event: { change: photosChanged }", multiple = "multiple" })
	@Html.ValidationMessageFor(m => m.Photos)
</div>

<hr />
@Html.Partial("_SubmitArea")